'''
Реализуйте класс MoneyBox, для работы с виртуальной копилкой.

Каждая копилка имеет ограниченную вместимость, которая выражается целым числом – количеством монет,
которые можно положить в копилку. Класс должен поддерживать информацию о количестве монет в копилке,
предоставлять возможность добавлять монеты в копилку и узнавать, можно ли добавить в копилку ещё какое-то
количество монет, не превышая ее вместимость.

Класс должен иметь следующий вид

class MoneyBox:
    def __init__(self, capacity):
        # конструктор с аргументом – вместимость копилки

    def can_add(self, v):
        # True, если можно добавить v монет, False иначе

    def add(self, v):
        # положить v монет в копилку
При создании копилки, число монет в ней равно 0.
Примечание:
Гарантируется, что метод add(self, v) будет вызываться только если can_add(self, v) – True﻿.
'''

class MoneyBox:
    def __init__(self, capacity = 100):
        self.capacity = capacity

    def can_add(self, v):
        return False if v > self.capacity else True

    def add(self, v):
        if self.can_add(v):
            self.capacity -= v

# Проверки
box = MoneyBox(100)
box.add(91)
box.add(11)
print(box.capacity)
print(box.can_add(10))